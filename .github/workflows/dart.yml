name: Flutter Build

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release (e.g., v1.0.0)'
        required: true
        type: string
      release_name:
        description: 'Release name (e.g., Version 1.0.0)'
        required: true
        type: string
  # 可选：如果您希望在推送标签时自动发布，可以取消注释以下内容
  # push:
  #   tags:
  #     - 'v*.*.*'

env:
  FLUTTER_CHANNEL: beta
  FLUTTER_VERSION: 3.27.0-0.2.pre
  PUB_CACHE: ~/.pub-cache

jobs:
  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/flutter
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_CHANNEL }}-${{ env.FLUTTER_VERSION }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ env.FLUTTER_CHANNEL }}-
            ${{ runner.os }}-flutter-

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Flutter Doctor
        run: flutter doctor -v

      - name: Build macOS
        run: flutter build macos --release

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-app
          path: build/macos/Build/Products/Release/*.app

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false

      - name: Flutter Config - Enable Windows Desktop
        run: flutter config --enable-windows-desktop

      - name: Flutter Doctor
        run: flutter doctor -v

      - name: Check for windows directory
        run: |
          if (!(Test-Path "windows")) {
            Write-Error "windows directory does not exist in the project. Please add Windows platform support."
            exit 1
          }

      - name: Build Windows
        run: flutter build windows --release --verbose

      - name: Upload Windows Build Directory
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: build/windows/**

      - name: List Build Directory
        run: |
          echo "Listing build/windows/runner/Release directory:"
          dir build/windows/runner/Release/

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-app
          path: build/windows/runner/Release/*.exe

  build-ubuntu:
    name: Build for Linux (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/flutter
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_CHANNEL }}-${{ env.FLUTTER_VERSION }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ env.FLUTTER_CHANNEL }}-
            ${{ runner.os }}-flutter-

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false

      - name: Install Dependencies for Linux Build
        run: |
          echo "Installing dependencies for Linux build..."
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev build-essential cmake

      - name: Verify Dependencies Installation
        run: |
          echo "Verifying dependencies..."
          which ninja
          which g++
          which cmake
          cmake --version
          g++ --version

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Flutter Doctor
        run: flutter doctor -v

      - name: Build Linux
        run: flutter build linux --release

      - name: Upload Linux Build Directory
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: build/linux/**

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-app
          path: build/linux/x64/release/bundle/*

  build-android:
    name: Build for Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/flutter
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_CHANNEL }}-${{ env.FLUTTER_VERSION }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ env.FLUTTER_CHANNEL }}-
            ${{ runner.os }}-flutter-

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false

      - name: Setup Android Environment
        uses: android-actions/setup-android@v2
        with:
          java-version: '11'

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Flutter Doctor
        run: flutter doctor -v

      - name: Build Android APK
        run: flutter build apk --release

      - name: Upload Android Artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows, build-ubuntu, build-android]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download macOS Artifact
        uses: actions/download-artifact@v3
        with:
          name: macos-app

      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-app

      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-app

      - name: Download Android APK
        uses: actions/download-artifact@v3
        with:
          name: android-apk

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.6.1
        with:
          tag: ${{ github.event.inputs.tag_name }}
          name: ${{ github.event.inputs.release_name }}
          body: |
            自动化生成的 Flutter 应用发布。
          draft: false
          prerelease: false

      - name: Upload macOS App to Release
        uses: ncipollo/release-action@v1.6.1
        with:
          upload: macos-app/*.app

      - name: Upload Windows App to Release
        uses: ncipollo/release-action@v1.6.1
        with:
          upload: windows-app/*.exe

      - name: Upload Linux App to Release
        uses: ncipollo/release-action@v1.6.1
        with:
          upload: linux-app/*

      - name: Upload Android APK to Release
        uses: ncipollo/release-action@v1.6.1
        with:
          upload: android-apk/app-release.apk
